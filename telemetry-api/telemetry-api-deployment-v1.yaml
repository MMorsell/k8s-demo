apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
  replicas: 4
  selector:
    matchLabels:
      app: api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: telemetry-api
          image: telemetry-api:v1
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /healthz  
              port: 8080      
            initialDelaySeconds: 10   # Delay the probe for 30 seconds after the container starts
            periodSeconds: 10         # Check the readiness every 10 seconds
            failureThreshold: 3       # Mark the container as not ready after 3 consecutive failures
          resources:
            requests:
              cpu: "100m"  # Request 0.1 CPU cores
              memory: "128Mi"  # Request 128 MiB of memory
            limits:
              cpu: "500m"  # Limit to 0.5 CPU cores
              memory: "1024Mi"  # Limit to 1024 MiB of memory

---

apiVersion: v1
kind: Service
metadata:
  name: api-lb
spec:
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080 
  type: LoadBalancer


